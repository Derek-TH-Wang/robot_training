ginger: #namespace

  task_and_robot_environment_name: "GingerPathPlanning-v0"

  # DQN algorithm parameters
  alpha: 0.002 # Learning Rate
  alpha_decay: 0.01
  gamma: 0.5 # 1-1/(n), n:min step to goal. future action and reward influence to current, the larger gamma, the robot more focus on the future, less gamma, maybe easy to reach target
  epsilon: 0.8 # choose random rate, 0 none 1 a lot, in a complex task, large is beter
  epsilon_decay: 0.999 # how we reduse the exploration, 0.9995: 10000 times will reduce to 0.006
  epsilon_min: 0.01 # minimum value that epsilon can have
  replay_buffer_size: 20000
  batch_size: 10000 # need larger than n_actions!!! as large as possible(but not all data?), otherwise, will loss some of the experience
  episodes_training: 500
  episodes_running: 100
  n_win_ticks: 50 # If the mean of rewards is bigger than this and have passed min_episodes, the task is considered finished
  min_episodes: 10
  monitor: True
  quiet: False


